[gd_scene load_steps=12 format=2]

[ext_resource path="res://Scripts/Customer.gd" type="Script" id=1]
[ext_resource path="res://MeshesNew/costumer.obj" type="ArrayMesh" id=2]
[ext_resource path="res://MeshesNew/Material_001.material" type="Material" id=3]
[ext_resource path="res://Scripts/CustomerMesh.gd" type="Script" id=4]
[ext_resource path="res://Art/Emoticons/emoticon1.png" type="Texture" id=5]
[ext_resource path="res://Art/FoodIcons/PizzaSprite3D.png" type="Texture" id=6]
[ext_resource path="res://Scripts/Baloon.gd" type="Script" id=7]
[ext_resource path="res://Sounds/Nhom.wav" type="AudioStream" id=8]

[sub_resource type="Shader" id=1]

code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}




void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=2]

resource_local_to_scene = true
render_priority = 0
shader = SubResource( 1 )
shader_param/albedo = Color( 1, 1, 1, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.5
shader_param/roughness = 0.542695
shader_param/point_size = 1.0
shader_param/metallic_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/roughness_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
_sections_unfolded = [ "Resource" ]

[sub_resource type="ConvexPolygonShape" id=3]

points = PoolVector3Array( 0, -1.5, 0.5, 0, -1.5, -0.5, 0, -1.5, 0.5, -1, 1.5, -0.5, 1, 1.5, -0.5, -1, 1.5, 0.5, 0.999512, 1.5, 0.5, 1, 1.5, -0.5, 0, -1.5, -0.5, 0.999512, 1.5, 0.5, 0, -1.5, 0.5, 0.999512, 1.5, 0.5, 0, -1.5, 0.5, -1, 1.5, 0.5, 0, -1.5, 0.5, -1, 1.5, 0.5, 0, -1.5, 0.5, -1, 1.5, -0.5, 0, -1.5, -0.5, 0, -1.5, -0.5, 1, 1.5, -0.5, -1, 1.5, -0.5, 1.2002, 0.884277, 0.289795, 1.2002, 0.0516357, 0.289795, 1.2002, 0.884277, -0.289795, 1.2002, 0.0516357, -0.289795, 1.2002, 0.884277, -0.289795, 1.2002, 0.0516357, -0.289795, 1.78027, 0.884277, -0.289795, 1.78027, 0.0516357, -0.289795, 1.78027, 0.884277, -0.289795, 1.78027, 0.0516357, -0.289795, 1.78027, 0.884277, 0.289795, 1.78027, 0.0516357, 0.289795, 1.78027, 0.884277, 0.289795, 1.78027, 0.0516357, 0.289795, 1.2002, 0.884277, 0.289795, 1.2002, 0.0516357, 0.289795, 1.78027, 0.0516357, -0.289795, 1.2002, 0.0516357, -0.289795, 1.78027, 0.0516357, 0.289795, 1.2002, 0.0516357, 0.289795, 1.2002, 0.884277, -0.289795, 1.78027, 0.884277, -0.289795, 1.2002, 0.884277, 0.289795, 1.78027, 0.884277, 0.289795, -1.79297, 0.884277, 0.289795, -1.79297, 0.0516357, 0.289795, -1.79297, 0.884277, -0.289795, -1.79297, 0.0516357, -0.289795, -1.79297, 0.884277, -0.289795, -1.79297, 0.0516357, -0.289795, -1.21289, 0.884277, -0.289795, -1.21289, 0.0516357, -0.289795, -1.21289, 0.884277, -0.289795, -1.21289, 0.0516357, -0.289795, -1.21289, 0.884277, 0.289795, -1.21289, 0.0516357, 0.289795, -1.21289, 0.884277, 0.289795, -1.21289, 0.0516357, 0.289795, -1.79297, 0.884277, 0.289795, -1.79297, 0.0516357, 0.289795, -1.21289, 0.0516357, -0.289795, -1.79297, 0.0516357, -0.289795, -1.21289, 0.0516357, 0.289795, -1.79297, 0.0516357, 0.289795, -1.79297, 0.884277, -0.289795, -1.21289, 0.884277, -0.289795, -1.79297, 0.884277, 0.289795, -1.21289, 0.884277, 0.289795, -1, 3.89453, 1, -1, 1.89551, 1, -1, 3.89453, -1, -1, 1.89551, -1, -1, 3.89453, -1, -1, 1.89551, -1, 1, 3.89453, -1, 1, 1.89551, -1, 1, 3.89453, -1, 1, 1.89551, -1, 1, 3.89453, 1, 1, 1.89551, 1, 1, 3.89453, 1, 1, 1.89551, 1, -1, 3.89453, 1, -1, 1.89551, 1, 1, 1.89551, -1, -1, 1.89551, -1, 1, 1.89551, 1, -1, 1.89551, 1, -1, 3.89453, -1, 1, 3.89453, -1, -1, 3.89453, 1, 1, 3.89453, 1 )

[node name="Customer" type="Area"]

input_ray_pickable = true
input_capture_on_drag = false
space_override = 0
gravity_point = false
gravity_distance_scale = 0.0
gravity_vec = Vector3( 0, -1, 0 )
gravity = 9.8
linear_damp = 0.1
angular_damp = 1.0
priority = 0.0
monitoring = true
monitorable = true
collision_layer = 1
collision_mask = 1
audio_bus_override = false
audio_bus_name = "Master"
reverb_bus_enable = false
reverb_bus_name = "Master"
reverb_bus_amount = 0.0
reverb_bus_uniformity = 0.0
script = ExtResource( 1 )
_sections_unfolded = [ "Collision" ]

[node name="MeshInstance" type="MeshInstance" parent="." index="0"]

layers = 1
material_override = null
cast_shadow = 1
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
mesh = ExtResource( 2 )
skeleton = NodePath("..")
material/0 = ExtResource( 3 )
material/1 = SubResource( 2 )
script = ExtResource( 4 )
_sections_unfolded = [ "Transform", "material" ]

[node name="CollisionShape" type="CollisionShape" parent="." index="1"]

shape = SubResource( 3 )
disabled = false

[node name="Patience" type="Timer" parent="." index="2"]

process_mode = 1
wait_time = 1.0
one_shot = true
autostart = false

[node name="Face" type="Sprite3D" parent="." index="3"]

transform = Transform( 0.35, 0, 0, 0, 0.35, 0, 0, 0, 0.35, 0, 2.92933, -1.18477 )
layers = 1
material_override = null
cast_shadow = 1
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
centered = true
offset = Vector2( 0, 0 )
flip_h = false
flip_v = false
modulate = Color( 1, 1, 1, 1 )
opacity = 1.0
pixel_size = 0.01
axis = 2
transparent = true
shaded = false
double_sided = true
alpha_cut = 0
texture = ExtResource( 5 )
vframes = 1
hframes = 1
frame = 0
region_enabled = false
region_rect = Rect2( 0, 0, 0, 0 )
_sections_unfolded = [ "Transform" ]

[node name="FedAnimTimer" type="Timer" parent="." index="4"]

process_mode = 1
wait_time = 1.0
one_shot = true
autostart = false

[node name="Baloon" type="Sprite3D" parent="." index="5"]

transform = Transform( 0.35, 0, 0, 0, 0.35, 0, 0, 0, 1, -1.24727, 5.06114, 0 )
layers = 1
material_override = null
cast_shadow = 1
extra_cull_margin = 0.0
use_in_baked_light = false
lod_min_distance = 0.0
lod_min_hysteresis = 0.0
lod_max_distance = 0.0
lod_max_hysteresis = 0.0
centered = true
offset = Vector2( 0, 0 )
flip_h = false
flip_v = false
modulate = Color( 1, 1, 1, 1 )
opacity = 1.0
pixel_size = 0.01
axis = 2
transparent = true
shaded = false
double_sided = true
alpha_cut = 0
texture = ExtResource( 6 )
vframes = 1
hframes = 1
frame = 0
region_enabled = false
region_rect = Rect2( 0, 0, 0, 0 )
script = ExtResource( 7 )
_sections_unfolded = [ "Transform" ]

[node name="FeedSound" type="AudioStreamPlayer3D" parent="." index="6"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 2.59621, 0 )
stream = ExtResource( 8 )
attenuation_model = 0
unit_db = 8.89
unit_size = 1.0
max_db = 3.0
autoplay = false
max_distance = 0.0
out_of_range_mode = 0
bus = "Master"
area_mask = 1
emission_angle_enabled = false
emission_angle_degrees = 45.0
emission_angle_filter_attenuation_db = -12.0
attenuation_filter_cutoff_hz = 5000.0
attenuation_filter_db = -24.0
doppler_tracking = 0
_sections_unfolded = [ "Attenuation Filter", "Doppler", "Emission Angle" ]

[connection signal="body_entered" from="." to="." method="_on_Customer_body_entered"]

[connection signal="timeout" from="Patience" to="." method="_on_Patience_timeout"]

[connection signal="timeout" from="FedAnimTimer" to="." method="_on_FedAnimTimer_timeout"]


